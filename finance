# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZNHz4imXGNXoA_uMwoc8beCLEV8WHtZd
"""

!pip install yfinance apscheduler pymongo

!pip install pymongo

from pymongo import MongoClient

import yfinance as yf
import pymongo
from apscheduler.schedulers.blocking import BlockingScheduler
from datetime import datetime, timedelta

# Set up MongoDB connection
client = MongoClient("mongodb+srv://kgrsuryateja33:surya12345678@mydb.jjv738i.mongodb.net/?retryWrites=true&w=majority")
mongo_username = 'kgrsuryateja33'
mongo_password = 'surya12345678'

mongo_database='stock_data'
mongo_db=client[mongo_database]

client.test

client.list_database_names()

db=client['stock_data']

data=db['icici_bank']

collection = db["icici_bank"]

#mongo_db = client["stock_data"]
#collection = mongo_db["icici_bank"]

# Define the ticker and time range
ticker = "ICICIBANK.NS"
start_time = datetime.strptime("11:15:00", "%H:%M:%S")
end_time = datetime.strptime("14:15:00", "%H:%M:%S")
time_interval = timedelta(minutes=15)

# Function to fetch and store data
def fetch_and_store_data():
    current_time = datetime.now()
    if start_time <= current_time <= end_time:
        end_of_day = current_time.replace(hour=23, minute=59, second=59, microsecond=999999)
        historical_data = yf.download(ticker, start=current_time - time_interval, end=end_of_day)

        if not historical_data.empty:
            latest_candle = historical_data.iloc[-1]
            collection.insert_one({
                "timestamp": latest_candle.name,
                "open": latest_candle["Open"],
                "high": latest_candle["High"],
                "low": latest_candle["Low"],
                "close": latest_candle["Close"],
                "volume": latest_candle["Volume"]
            })
            print(f"Data stored for {latest_candle.name}")

# Set up APScheduler
scheduler = BlockingScheduler()
scheduler.add_job(fetch_and_store_data, "interval", minutes=15)
scheduler.start()

print(scheduler)
